// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PixelPort.Server.Data;

#nullable disable

namespace PixelPort.Server.Migrations
{
    [DbContext(typeof(PixelPortDbContext))]
    [Migration("20251028121130_Added-Description-Product")]
    partial class AddedDescriptionProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PixelPort.Server.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Телефоны"
                        });
                });

            modelBuilder.Entity("PixelPort.Server.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ManufacturerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ManufacturerName = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            ManufacturerName = "Samsung"
                        });
                });

            modelBuilder.Entity("PixelPort.Server.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManufacturerID")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ManufacturerID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            ImageUrl = "",
                            ManufacturerID = 1,
                            Price = 40000,
                            ProductName = "Iphone 14 128 Гб Чёрный ",
                            Rate = 0.0,
                            UpdatedDate = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            ImageUrl = "",
                            ManufacturerID = 2,
                            Price = 20000,
                            ProductName = "Sumsung Galaxy A26 128 Гб Зелёный",
                            Rate = 0.0,
                            UpdatedDate = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PixelPort.Server.Models.ProductCharacteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CharacteristicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharacteristicValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCharacteristics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacteristicName = "Объём встроенной памяти",
                            CharacteristicValue = "128 Гб",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            CharacteristicName = "Объём оперативной памяти",
                            CharacteristicValue = "6 Гб",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            CharacteristicName = "Цвет",
                            CharacteristicValue = "Чёрный",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 4,
                            CharacteristicName = "Количество основных камер",
                            CharacteristicValue = "2",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 5,
                            CharacteristicName = "Диагональ экрана",
                            CharacteristicValue = "6.1",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 6,
                            CharacteristicName = "Объём встроенной памяти",
                            CharacteristicValue = "128 Гб",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 7,
                            CharacteristicName = "Объём оперативной памяти",
                            CharacteristicValue = "6 Гб",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 8,
                            CharacteristicName = "Цвет",
                            CharacteristicValue = "Зелёный",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 9,
                            CharacteristicName = "Количество основных камер",
                            CharacteristicValue = "3",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 10,
                            CharacteristicName = "Диагональ экрана",
                            CharacteristicValue = "6.7",
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("PixelPort.Server.Models.Product", b =>
                {
                    b.HasOne("PixelPort.Server.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PixelPort.Server.Models.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("PixelPort.Server.Models.ProductCharacteristic", b =>
                {
                    b.HasOne("PixelPort.Server.Models.Product", "Product")
                        .WithMany("Characteristics")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PixelPort.Server.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PixelPort.Server.Models.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PixelPort.Server.Models.Product", b =>
                {
                    b.Navigation("Characteristics");
                });
#pragma warning restore 612, 618
        }
    }
}
